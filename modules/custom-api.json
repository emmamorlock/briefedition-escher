{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Custom API",
        "description": "This is the place to add your own path endpoints"
    },
    "servers": [
        {
            "description": "Endpoint for testing on localhost",
            "url":"http://localhost:8080/exist/apps/escher"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "name": "teipublisher.com.login",
                "in": "cookie"
            }
        }
    },
    "paths": {
		"/briefe": {
			"get": {
				"summary": "Browse list of letters",
				"description": "Browse through the letters of the edition",
				"tags": ["view"],
				"operationId": "vapi:html",
				"parameters": [
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "index"
						}
					},
					{
						"name": "uri",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "briefe/"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML of the page",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
        "/briefe/B{id}": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying a letter",
				"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
				"tags": ["view"],
				"operationId": "custom:view-letter",
				"x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Relative path to the document",
						"required": true,
						"schema": {
							"type": "string",
							"example": "test/orlik_to_serafin.xml"
						},
						"allowReserved": true
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
		"/uber-die-edition/{doc}": {
				"get": {
					"summary": "Retrieve the HTML template used for displaying a document",
					"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
					"tags": ["view"],
					"operationId": "custom:view-about",
					"parameters": [
						{
							"name": "doc",
							"in": "path",
							"description": "Relative path to the document",
							"required": true,
							"schema": {
								"type": "string",
								"example": "credits"
							},
							"allowReserved": true
						},
						{
							"name": "template",
							"in": "query",
							"description": "Name of the template to be used. Overwrites any default template setting.",
							"schema": {
								"type": "string"
							}
						},
						{
							"name": "view",
							"in": "query",
							"schema": {
								"type": "string",
								"enum": ["page", "div", "single"]
							},
							"default": "single",
							"description": "The view type used by the main view which displays the document, e.g. 'page' or 'div'. This has an influence on the generated links, which need to differ when linking to a page rather than a section."
						},
						{
							"name": "odd",
							"in": "query",
							"schema": {
								"type": "string"
							}
						},
						{
							"name": "action",
							"in": "query",
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "HTML view for the document",
							"content": {
								"text/html": {
									"schema": {
										"type": "string"
									}
								}
							}
						},
						"404": {
							"description": "The document was not found",
							"content": {
								"text/html": {
									"schema": {
										"type": "string"
									}
								}
							}
						},
						"500": {
							"description": "An error occurred",
							"content": {
								"text/html": {
									"schema": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
		   "/kontexte/personen": {
            "get": {
				"summary": "Landing page for people",
				"description": "Retrieve an HTML page expanded through eXist templating. This is used to load the top-level HTML pages, e.g. `index.html`.",
				"tags": ["view"],
				"operationId": "vapi:html",
				"x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string",
                            "default": "people"
						}
					},
					{
						"name": "uri",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "kontexte/personen"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML of the page",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/personen/{name}": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying person metadata",
				"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
				"tags": ["view"],
				"operationId": "custom:view-person",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "Name of the person",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Escher%20(vom%20Glas)%20Alfred"
						},
						"allowReserved": true
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/bibliographie/{name}/{letter}": {
            "get": {
				"summary": "Landing page for bibliography",
				"description": "Retrieve an HTML page expanded through eXist templating. This is used to load the top-level HTML pages, e.g. `index.html`.",
				"tags": ["view"],
				"operationId": "vapi:html",
                "x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string",
                            "default": "bibliography"
						}
					},
                    {
						"name": "name",
						"in": "path",
						"description": "Subcategory",
						"required": false,
						"schema": {
							"type": "string",
							"default": "Archivbestande"
						}
					},
                    {
						"name": "letter",
						"in": "path",
						"schema": {
							"type": "string",
                            "default": "A"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML of the page",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/{id}": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying an article",
				"tags": ["view"],
				"operationId": "custom:view-article",
				"x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Relative path to the document",
						"required": true,
						"schema": {
							"type": "string",
							"default": "alfred-escher"
						},
						"allowReserved": true
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/api/bibliography/{name}/{letter}": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying person metadata",
				"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
				"tags": ["default"],
				"operationId": "custom:view-bibliography",
                "parameters": [
					{
						"name": "name",
						"in": "path",
						"schema": {
							"type": "string",
                            "default": "Archivbestande"
						}
					},
                    {
						"name": "letter",
						"in": "path",
						"schema": {
							"type": "string",
                            "default": "A"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/abkurzungen/{name}/{letter}": {
            "get": {
				"summary": "Landing page for commentaries",
				"description": "Retrieve an HTML page expanded through eXist templating. This is used to load the top-level HTML pages, e.g. `index.html`.",
				"tags": ["view"],
				"operationId": "vapi:html",
                "x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string",
                            "default": "abbreviations"
						}
					},
                    {
						"name": "name",
						"in": "path",
						"description": "Abbreviation type",
						"required": false,
						"schema": {
							"type": "string",
							"default": "Quellen"
						}
					},
                    {
						"name": "letter",
						"in": "path",
						"description": "Initial",
						"required": false,
						"schema": {
							"type": "string",
							"default": "A"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML of the page",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/api/abbreviations/{name}/{letter}": {
            "get": {
				"summary": "Retrieve the list of abbreviations by type name and letter",
				"tags": ["default"],
				"operationId": "custom:view-abbreviations",
                "parameters": [
					{
						"name": "name",
						"in": "path",
						"schema": {
							"type": "string",
                            "default": "Quellen"
						}
					},
                    {
						"name": "letter",
						"in": "path",
						"description": "Initial",
						"required": true,
						"schema": {
							"type": "string",
							"default": "A"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        }, 
        "/kontexte/uberblickskommentare": {
            "get": {
				"summary": "Landing page for commentaries",
				"description": "Retrieve an HTML page expanded through eXist templating. This is used to load the top-level HTML pages, e.g. `index.html`.",
				"tags": ["view"],
				"operationId": "vapi:html",
                "x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string",
                            "default": "commentary"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML of the page",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/landing/uberblickskommentare": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying person metadata",
				"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
				"tags": ["default"],
				"operationId": "custom:landing-commentary",
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
        "/kontexte/uberblickskommentare/{name}": {
            "get": {
				"summary": "Retrieve the HTML template used for displaying person metadata",
				"description": "Get the HTML template associated with the given document. This is called whenever the users tries to view a document. The actual content of the document will then be loaded by the template.",
				"tags": ["view"],
				"operationId": "custom:view-commentary",
				"x-error-handler": "vapi:handle-error",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "Commentary id",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Aufstieg"
						}
					}
				],
				"responses": {
					"200": {
						"description": "HTML view for the document",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"404": {
						"description": "The document was not found",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"500": {
						"description": "An error occurred",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
        },
		"/api/search": {
			"get": {
				"summary": "Run a search on all collections",
				"operationId": "app:search",
				"tags": ["search"],
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "Query string",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "field",
						"in": "query",
						"description": "The field to query",
						"schema": {
							"type": "string",
							"default": "text"
						}
					},
					{
						"name": "start",
						"in": "query",
						"description": "Start offset of the first item to show from the result set",
						"schema": {
							"type": "integer",
							"default": 1
						}
					},
					{
						"name": "per-page",
						"in": "query",
						"description": "Number of items to show on one page",
						"schema": {
							"type": "integer",
							"default": 10
						}
					},
					{
						"name": "doc",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"nullable": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "Search results returned",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
        "/api/people": {
            "get": {
                "summary": "List register entries",
                "description": "Retrieve list of register entries in table structure",
                "operationId": "custom:people",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "default": "id"
                        }
                    },
					{
						"name": "view",
						"in": "query",
						"schema":{
							"type": "string",
							"default": "correspondents"
						}
					},
                    {
                        "name": "dir",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of register entries",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "basicAuth": []
        }
    ]
}